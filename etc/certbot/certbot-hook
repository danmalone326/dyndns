#!/bin/bash
# call this script for both the auth-hook and the cleanup-hook
# certbot sets the $CERTBOT_AUTH_OUTPUT environment variable only for cleanup

#
# for testing
#
#CERTBOT_DOMAIN=tester.malone.org
#CERTBOT_VALIDATION=fedbca9876543210
#CERTBOT_AUTH_OUTPUT=good
# Assumes these come from certbot
#echo ---
#echo $CERTBOT_DOMAIN
#echo $CERTBOT_VALIDATION
#echo $CERTBOT_AUTH_OUTPUT
#echo ---

DYNDNS_URL="https://update.example.org/nic/update"
DYNDNS_USERNAME="johndoe"
DYNDNS_PASSWORD="UncleBuck"

# if mapping to a different domain, modify this REGEX for the change
#DDNS_REGEX="s/example.com$/ddns.example.com/"
# this default one does nothing
DDNS_REGEX="s/^$//"

DDNS_DOMAIN=$(echo $CERTBOT_DOMAIN | sed -e "$DDNS_REGEX")
#echo $DDNS_DOMAIN

TXT_RECORD="_acme-challenge.${DDNS_DOMAIN}"
#echo $TXT_DOMAIN

if [[ -z "${CERTBOT_AUTH_OUTPUT}" ]]
then
# if $CERTBOT_AUTH_OUTPUT is not set (zero length), this is auth step
  QUERY_STRING="hostname=${TXT_RECORD}&txt=${CERTBOT_VALIDATION}"
else
# if $CERTBOT_AUTH_OUTPUT is set, means this is cleanup step
  QUERY_STRING="hostname=${TXT_RECORD}&delete=TXT"
fi

CURL_COMMAND="/usr/bin/curl --silent -K- ${DYNDNS_URL}?${QUERY_STRING}"
#echo $CURL_COMMAND

$CURL_COMMAND <<EOF
-u $DYNDNS_USERNAME:$DYNDNS_PASSWORD
EOF

# wait for zone transfer
sleep 5